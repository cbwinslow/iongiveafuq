version: "3.9"
services:
  web:
    build: ./frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`iongiveafuq.com`)"
      - "traefik.http.services.web.loadbalancer.server.port=80"
    networks: [fuqnet]

  api:
    build: ./backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`iongiveafuq.com`) && PathPrefix(`/api`)"
      - "traefik.http.services.api.loadbalancer.server.port=4000"
    networks: [fuqnet]

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ion
      POSTGRES_PASSWORD: ionpass
      POSTGRES_DB: iongiveafuq
    volumes:
      - db-data:/var/lib/postgresql/data
    networks: [fuqnet]

  caddy:
    build: ./infra/caddy
    volumes:
      - ./frontend/dist:/srv:ro
    environment:
      - CF_API_TOKEN=${CF_API_TOKEN}
    networks: [fuqnet]

  nginx:
    image: nginx:alpine
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks: [fuqnet]

  traefik:
    image: traefik:v2.11
    command:
      - --providers.docker=true
      - --providers.file.directory=/etc/traefik
      - --entrypoints.web.address=:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./infra/traefik:/etc/traefik:ro
    networks: [fuqnet]

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARED_TOKEN}
    volumes:
      - ./infra/cloudflared:/etc/cloudflared:ro
    depends_on:
      - nginx
    networks: [fuqnet]

volumes:
  db-data:

networks:
  fuqnet:
